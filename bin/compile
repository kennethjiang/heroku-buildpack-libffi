#!/bin/bash
# bin/compile <build-dir> <cache-dir>

BUILD_DIR=$1
CACHE_DIR=$2
VERSION_DIR=`cd $(dirname $0); cd ..; pwd`
VERSION=`cat $VERSION_DIR/VERSION | sed 's/[\r\n]*$//'`
ARCHIVE=`basename $VERSION`
ARCHIVE_DIR=`echo $ARCHIVE | sed 's/\.tar\.gz$//'`
PREFIX_DIR=$1

get_source() {
  if [ ! -d $CACHE_DIR ]; then
    echo "Creating $CACHE_DIR"
    mkdir $CACHE_DIR
  fi


  if [ -e $CACHE_DIR/$ARCHIVE ]; then
    echo "Don't need to download, already exists"
  else
    echo "Downloading $VERSION..."
    curl $VERSION -o $CACHE_DIR/$ARCHIVE
  fi
}

unpack_source() {
  if [ ! -d $CACHE_DIR/$ARCHIVE_DIR ]; then
    echo "Unpacking..."
    `tar xzf $CACHE_DIR/$ARCHIVE -C $CACHE_DIR`
  fi
}

compile_source() {
    unpack_source
    echo "Compiling $ARCHIVE_DIR..."
    cd $CACHE_DIR/$ARCHIVE_DIR
    ./configure --prefix=$PREFIX_DIR
    make install
}

pg_config_path() {
  export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$PREFIX_DIR/lib/pkgconfig/
  echo "----> PKG_CONFIG_PATH=$PKG_CONFIG_PATH"
  export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PREFIX_DIR/lib
  export LIBRARY_PATH=$LIBRARY_PATH:$PREFIX_DIR/lib
}

env
ls /app/lib

get_source
compile_source
pg_config_path

# cat <<EOF >$PREFIX_DIR/lib/pkgconfig/libffi.pc
# prefix=/app
# exec_prefix=/app
# libdir=/app/lib
# includedir=/app/lib/libffi-3.0.13/include

# Name: libffi
# Description: Library supporting Foreign Function Interfaces
# Version: 3.0.13
# Libs: -L/app/lib -lffi
# Cflags: -I/app/lib/libffi-3.0.13/include
# EOF
# echo "-----> Done."

exit 0
